// Code generated by MockGen. DO NOT EDIT.
// Source: member.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	models "line-wallet/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIMemberService is a mock of IMemberService interface.
type MockIMemberService struct {
	ctrl     *gomock.Controller
	recorder *MockIMemberServiceMockRecorder
}

// MockIMemberServiceMockRecorder is the mock recorder for MockIMemberService.
type MockIMemberServiceMockRecorder struct {
	mock *MockIMemberService
}

// NewMockIMemberService creates a new mock instance.
func NewMockIMemberService(ctrl *gomock.Controller) *MockIMemberService {
	mock := &MockIMemberService{ctrl: ctrl}
	mock.recorder = &MockIMemberServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMemberService) EXPECT() *MockIMemberServiceMockRecorder {
	return m.recorder
}

// FindMemberByLineUserID mocks base method.
func (m *MockIMemberService) FindMemberByLineUserID(line_user_id string) (*models.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMemberByLineUserID", line_user_id)
	ret0, _ := ret[0].(*models.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindMemberByLineUserID indicates an expected call of FindMemberByLineUserID.
func (mr *MockIMemberServiceMockRecorder) FindMemberByLineUserID(line_user_id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMemberByLineUserID", reflect.TypeOf((*MockIMemberService)(nil).FindMemberByLineUserID), line_user_id)
}
